{"version":3,"sources":["../../../source/server/daos/blogDAO.js"],"names":["getOneBlog","blogModel","query","Promise","resolve","reject","findOne","err","blog","getManyBlogs","findAll","blogs","insertBlog","body","create","newBlog","deleteBlog","req","updateBlog","module","exports"],"mappings":";;AAAA;;AAEA;AACA,IAAMA,aAAa,SAAbA,UAAa,CAACC,SAAD,EAAYC,KAAZ;AAAA,SAAsB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxEJ,cAAUK,OAAV,CAAkBJ,KAAlB,EAAyB,UAACK,GAAD,EAAMC,IAAN,EAAe;AACtC,UAAID,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD;AACDH,cAAQI,IAAR;AACD,KALD;AAMD,GAPwC,CAAtB;AAAA,CAAnB;;AASA;AACA,IAAMC,eAAe,SAAfA,YAAe,CAACR,SAAD;AAAA,SAAe,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnEJ,cAAUS,OAAV,CAAkB,UAACH,GAAD,EAAMI,KAAN,EAAgB;AAChC,UAAIJ,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD;AACDH,cAAQO,KAAR;AACD,KALD;AAMD,GAPmC,CAAf;AAAA,CAArB;;AASA;AACA,IAAMC,aAAa,SAAbA,UAAa,CAACX,SAAD,EAAYY,IAAZ;AAAA,SAAqB,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvEJ,cAAUa,MAAV,CAAiBD,IAAjB,EAAuB,UAACN,GAAD,EAAMQ,OAAN,EAAkB;AACvC,UAAIR,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD;AACDH,cAAQW,OAAR;AACD,KALD;AAMD,GAPuC,CAArB;AAAA,CAAnB;;AASA;AACA,IAAMC,aAAa,SAAbA,UAAa,CAACf,SAAD,EAAYgB,GAAZ;AAAA,SAAoB,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtE;AACD,GAFsC,CAApB;AAAA,CAAnB;;AAIA;AACA,IAAMa,aAAa,SAAbA,UAAa,CAACjB,SAAD,EAAYgB,GAAZ;AAAA,SAAoB,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtE;AACD,GAFsC,CAApB;AAAA,CAAnB;;AAIAc,OAAOC,OAAP,GAAiB;AACfpB,wBADe;AAEfS,4BAFe;AAGfG,wBAHe;AAIfI,wBAJe;AAKfE;AALe,CAAjB","file":"blogDAO.js","sourcesContent":["/* Written by @Kieran Boyd */\n\n// A method which will return a specific blog post\nconst getOneBlog = (blogModel, query) => new Promise((resolve, reject) => {\n  blogModel.findOne(query, (err, blog) => {\n    if (err) {\n      reject(err);\n    }\n    resolve(blog);\n  });\n});\n\n// A method which will return blog posts that match a criteria\nconst getManyBlogs = (blogModel) => new Promise((resolve, reject) => {\n  blogModel.findAll((err, blogs) => {\n    if (err) {\n      reject(err);\n    }\n    resolve(blogs);\n  })\n});\n\n// A method which will insert a blog post into MongoDb\nconst insertBlog = (blogModel, body) => new Promise((resolve, reject) => {\n  blogModel.create(body, (err, newBlog) => {\n    if (err) {\n      reject(err);\n    }\n    resolve(newBlog);\n  })\n});\n\n// A method which will delete a blog post from MongoDb\nconst deleteBlog = (blogModel, req) => new Promise((resolve, reject) => {\n  //TODO\n});\n\n// A method which will alter a blog post in MongoDb\nconst updateBlog = (blogModel, req) => new Promise((resolve, reject) => {\n  //TODO\n});\n\nmodule.exports = {\n  getOneBlog,\n  getManyBlogs,\n  insertBlog,\n  deleteBlog,\n  updateBlog,\n}\n"]}